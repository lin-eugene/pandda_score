Bootstrap: docker
From: nvcr.io/hpc/namd:2.12-171025

%help
    Namdinator container

%setup
    # Very first thing on container creation, make a dir to put stuff in
    mkdir ${SINGULARITY_ROOTFS}/namdinator_software
%files
    # Copy file from local drive into container
    vmd-1.9.3.bin.LINUXAMD64-CUDA8-OptiX4-OSPRay111p1.opengl.tar.gz /namdinator_software/vmd-1.9.3.bin.LINUXAMD64-CUDA8-OptiX4-OSPRay111p1.opengl.tar.gz
    phenix-installer-1.13-2998-intel-linux-2.6-x86_64-centos6.tar.gz /namdinator_software/phenix-installer-1.13-2998-intel-linux-2.6-x86_64-centos6.tar.gz
    rosetta_src_2016.32.58837_bundle.tgz /namdinator_software/rosetta_src_2016.32.58837_bundle.tgz
    rosetta_compiler_test.py /namdinator_software/rosetta_compiler_test.py
    Namdinator_bash-master.zip /namdinator_software/Namdinator_bash-master.zip
    site.settings /namdinator_software/site.settings

%labels
    Maintainer CFW
    Version v1.0

%post
    #renaming namd
    mv /opt/namd/namd2.12.171025-multicore /opt/namd/namd2

    #installing new apt keys: https://developer.nvidia.com/blog/updating-the-cuda-linux-gpg-repository-key/
    #apt-key del 7fa2af80
    #wget https://developer.download.nvidia.com/compute/cuda/repos/$distro/$arch/cuda-keyring_1.0-1_all.deb
    #dpkg -i cuda-keyring_1.0-1_all.deb

    # install vmd
    apt-get update -y
    apt-get -y install libglu1 --allow-unauthenticated
    apt-get -y install libxinerama1 --allow-unauthenticated
    apt-get -y install libxi6 libgconf-2-4 --allow-unauthenticated
    cd /namdinator_software/
    tar -zxvf /namdinator_software/vmd-1.9.3.bin.LINUXAMD64-CUDA8-OptiX4-OSPRay111p1.opengl.tar.gz --no-same-owner
    cd /namdinator_software/vmd-1.9.3
    ./configure
    cd ./src
    make install

    # install rosetta
    # apt update
    apt -y install zlib1g-dev --allow-unauthenticated
    apt -y install scons --allow-unauthenticated
    apt-get -y install libsqlite3-dev --allow-unauthenticated

    cd /namdinator_software/
    tar -zxvf /namdinator_software/rosetta_src_2016.32.58837_bundle.tgz --no-same-owner
    cd ./rosetta_src_2016.32.58837_bundle/main/source/
    ./scons.py mode=release bin

    # install phenix
    apt-get -y install libxcb-shm0 --allow-unauthenticated
    apt-get -y install libxcb-render-util0 --allow-unauthenticated
    apt-get -y install libsqlite3-dev --allow-unauthenticated
    cd /namdinator_software/
    tar -zxvf phenix-installer-1.13-2998-intel-linux-2.6-x86_64-centos6.tar.gz --no-same-owner
    cd phenix-installer-1.13-2998-intel-linux-2.6-x86_64-centos6
    ./install
    . /usr/local/phenix-1.13-2998/phenix_env.sh

    export PHENIX_ROSETTA_PATH=/namdinator_software/rosetta_src_2016.32.58837_bundle
    export ROSETTA_BIN=$PHENIX_ROSETTA_PATH/main/source/bin/
    export ROSETTA3_DB=$PHENIX_ROSETTA_PATH/main/database/

    cp /namdinator_software/site.settings /namdinator_software/rosetta_src_2016.32.58837_bundle/main/source/tools/build/site.settings

    rosetta.build_phenix_interface nproc=2
    rosetta.run_tests

    #unzip namdinator
    apt-get -y install rlwrap --allow-unauthenticated
    apt install unzip --allow-unauthenticated
    cd /namdinator_software/
    unzip Namdinator_bash-master.zip

%environment
    # Set environment variables

    # rosetta path
    export PHENIX_ROSETTA_PATH=/namdinator_software/rosetta_src_2016.32.58837_bundle
    export ROSETTA_BIN=$PHENIX_ROSETTA_PATH/main/source/bin/
    export ROSETTA3_DB=$PHENIX_ROSETTA_PATH/main/database/
    

%runscript
    # Put in a basic runscript to test everything is installed
    echo "ls /namdinator_software"
    echo "Arguments received: $*"
    echo "In container!"
    . /usr/local/phenix-1.13-2998/phenix_env.sh
    echo "phenix loaded sucessfully"
    export PHENIX_ROSETTA_PATH=/namdinator_software/rosetta_src_2016.32.58837_bundle
    export ROSETTA_BIN=$PHENIX_ROSETTA_PATH/main/source/bin/
    export ROSETTA3_DB=$PHENIX_ROSETTA_PATH/main/database/
    echo "rosetta loaded successfully"